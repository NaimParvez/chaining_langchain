*Why We need Structured Output:*

1. Data Extraction
2. API Building
3. Agents


*Ways to get Structured Output:*

- Some LLM’s can generated structured output
- with_structured_output function 
- we need to know data format (TypedDict, pydantic and json)
- With this function - Internal prompting will happen.
- Some LLM’s can’t generate structured output
- Using output parser


### TypedDict

TypedDict is a way to define a dictionary in Python where you specify what keys and values should exist. It helps ensure that your dictionary follows a specific structure.

*Why use TypedDict:*

- It tells python what keys are required and what types of values they should have.
- It *does not validate* data at runtime (It just helps with type hints for bette coding)
- TypedDict is just for representation - Just to tell what are the elements should be in the      response from the LLM
- It does not validate. For data validation, we have to use Pydantic.

### Pydantic

Pydantic is a data validation and data parsing library for python. It ensures that the data you work with is correct, structured and type-safe

- If name is not string, then it will  throw error:  Input should be a valid string

*Things we can do with Pydantic:*
- Default values
- Optional fields
- Coerce - type conversion
- Builtin validation
- Field function → default values, constraints, description
- Returns pydantic object → convert to json or dict


### JSON Schema
We use this if we are working with different programming languages

Conclusion: We mostly use Pydantic!